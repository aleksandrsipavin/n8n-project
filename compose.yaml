version: "3.9"

services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB_FILE: /run/secrets/postgres_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    healthcheck:
      # Update if you change DB/user names in secrets
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 5s
      timeout: 3s
      retries: 20

  traefik:
    image: traefik:v2.11
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # HTTP (80) -> redirect to HTTPS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      # HTTPS (443)
      - --entrypoints.websecure.address=:443
      # Use our self-signed certificate via file provider
      - --providers.file.filename=/etc/traefik/dynamic.yaml

      # --- ACME (public) â€” enable when using real DNS ---
      # - --certificatesresolvers.mytls.acme.tlschallenge=true
      # - --certificatesresolvers.mytls.acme.emailFile=/run/secrets/acme_email
      # - --certificatesresolvers.mytls.acme.storage=/letsencrypt/acme.json
      # --------------------------------------------------

      # Optional dashboard (LAN only; not internet-facing)
      # - --api.insecure=true
    ports:
      - "80:80"
      - "443:443"
      # - "8080:8080"  # dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
      - ./traefik_dynamic.yaml:/etc/traefik/dynamic.yaml:ro
      - traefik_data:/letsencrypt
    # secrets:
    #   - acme_email   # uncomment if using ACME

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.services.n8n.loadbalancer.server.port=5678
      # Optional headers hardening
      - traefik.http.middlewares.n8n-h.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n-h.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n-h.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n-h.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n-h.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n-h.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n-h.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n-h.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n-h@docker
    environment:
      NODE_ENV: production
      TZ: ${GENERIC_TIMEZONE}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}

      # n8n external URL (now HTTPS via Traefik; no trailing slash)
      N8N_HOST: ${SUBDOMAIN}.${DOMAIN_NAME}
      N8N_PORT: 5678
      N8N_PROTOCOL: https
      WEBHOOK_URL: https://${SUBDOMAIN}.${DOMAIN_NAME}

      # Secrets via *_FILE
      N8N_ENCRYPTION_KEY_FILE: /run/secrets/n8n_encryption_key

      # Postgres wiring
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE_FILE: /run/secrets/postgres_db
      DB_POSTGRESDB_USER_FILE: /run/secrets/postgres_user
      DB_POSTGRESDB_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files
    secrets:
      - n8n_encryption_key
      - postgres_user
      - postgres_password
      - postgres_db
      # - acme_email  # only if enabling ACME

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
  postgres_db:
    file: ./secrets/postgres_db.txt
  n8n_encryption_key:
    file: ./secrets/n8n_encryption_key.txt
  # acme_email:
  #   file: ./secrets/acme_email.txt  # only for ACME

volumes:
  pgdata:
  n8n_data:
  traefik_data:
